<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="CodeGeneratorGreen.Classes" #>
<#@ import namespace="CodeGeneratorGreen.Extentions" #>
<#@ import namespace="CodeGeneratorGreen.Models" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
			<#
			var table = SqlToCsharpHelper.table;
            var repName="GenericRepository";
            if(table.IsApplicationBased){
                repName="GenericApplicationBasedRepository";
            }
			#>
using System.Linq;
using Yashil.Common.Core.Classes;
using Yashil.Common.Infrastructure.Implementations;
using Yashil.Core.Entities;
using Yashil.Infrastructure.Data; 
using <#=ApplicationInfo.Instance.ClassNamespace#>.Core.Repositories;

namespace <#= ApplicationInfo.Instance.RepositoryNamespace #>
{
	public class <#= table.Name #>Repository : <#=repName#><<#= table.Name #>,int>, I<#= table.Name #>Repository
    {
        private readonly YashilAppDbContext _context;
        private readonly IUserPrincipal _userPrincipal;
		public <#= table.Name #>Repository (<#=ApplicationInfo.Instance.DbContextName#> context, IUserPrincipal userPrincipal) : base(context,userPrincipal)
            {
                _context = context;
                _userPrincipal = userPrincipal;
            }
         <#
            var cols=table.ForeignKeyColumns;
            var colsParams = String.Join(",", cols.Select(x=> " int? "+ x.Name.FirstCharacterToLower()).ToArray());
            var colVar=String.Join(",", cols.Select(x=>  x.Name.FirstCharacterToLower()).ToArray());
        if(!string.IsNullOrEmpty(colsParams)){
        #>
        
   
    public IQueryable<<#= table.Name #>> GetByCustomFilter(<#=colsParams#>)
        {
            var query= GetAll(true);
             <#foreach (Column col in table.ForeignKeyColumns)
                {#>
            if ( <#=col.Name.FirstCharacterToLower()#>.HasValue)
                {
                    query = query.Where(x => x.<#=col.Name#> == <#=col.Name.FirstCharacterToLower()#>.Value);
                }
              <#}#>    
          
            return query;
        }
        <#}#>   

       
    }
}      
